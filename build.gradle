/*
 * Copyright 2000-2021 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import jetbrains.sign.GpgSignSignatoryProvider

buildscript {
    repositories {
        maven { url 'https://packages.jetbrains.team/maven/p/jcs/maven' }
    }
    dependencies {
        classpath 'com.jetbrains:jet-sign:38'
    }
}

plugins {
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}
apply plugin: 'signing'

private calcVersion() {
    hasProperty("teamcity") ? "1.0.${teamcity["build.number"]}" : "1.0.0"
}

// use this option to test with JDK11
ext.release = rootProject.hasProperty("test.configuration") ? "false" == project["test.configuration"] : true

allprojects {
    version calcVersion()

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    sourceCompatibility = project.release ? 1.5 : 1.6
    targetCompatibility = project.release ? 1.5 : 1.6
}

def utils = rootProject.file('lib/util.jar')
ext.library_utils = files(utils)
ext.dist = rootProject.file('dist/')
ext.report_builder_jar_name = 'coverage-report'

sourceSets {
    main.java.srcDirs = []
    main.resources.srcDirs = []
    test.java.srcDirs = []
    test.resources.srcDirs = []
}

clean.doFirst {
    delete dist
}

apply from: 'publish.gradle'
signing {
    sign publishing.publications
    signatories = new GpgSignSignatoryProvider()
}

tasks.withType(Sign) {
    onlyIf { System.getenv("TEAMCITY_VERSION") != null }
}
