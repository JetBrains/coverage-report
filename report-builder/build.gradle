/*
 * Copyright 2000-2021 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

sourceSets {
    main.java.srcDirs = [file("src")]
    main.resources.srcDirs = [file("resources")]
    test.java.srcDirs = []
    test.resources.srcDirs = []
}

configurations {
    implementation.extendsFrom(externalDependancies)
}

dependencies {
    externalDependancies "org.freemarker:freemarker:2.3.30"
    externalDependancies "org.jetbrains:annotations:16.0.2"
    implementation "org.jetbrains.intellij.deps:intellij-coverage-agent:1.0.593"
}

public getPublishDependencies() {
    configurations.getByName("externalDependancies").getResolvedConfiguration().getFirstLevelModuleDependencies()
}

task reportBuilderJar(type: Jar) {
    archiveBaseName.set(report_builder_jar_name)
    destinationDirectory = dist
    from(sourceSets.main.output)
}

task reportBuilderJavadocJar(type: Jar) {
    archiveBaseName.set(report_builder_javadoc_jar_name)
    destinationDirectory = dist
    from javadoc
}

javadoc {
    exclude "**/impl/**"
    source = sourceSets.main.java
}

task allJars {
    dependsOn(reportBuilderJar, reportBuilderJavadocJar)
}
